/*!
 * # Semantic UI - Button
 * http://github.com/semantic-org/semantic-ui/
 *
 *
 * Released under the MIT license
 * http://opensource.org/licenses/MIT
 *
 */

/*******************************
            Theme
*******************************/

@type : 'element';
@element : 'button';

@import (multiple) '../../theme.config';

/*******************************
            Button
*******************************/

.ui.button {
  cursor: pointer;
  display: inline-block;

  min-height: 1em;

  outline-offset: var(--unfocused-outline-offset);
  outline-width: var(--focused-outline-width);
  outline-color: var(--unfocused-outline-color);
  outline-style: var(--focused-outline-style);
  border: var(--button-border, none);
  vertical-align: @verticalAlign;
  background: var(--button-background, @background);
  color: var(--button-text-color, @textColor);

  font-family: @fontFamily;

  margin: var(--button-margin, 0em @horizontalMargin @verticalMargin 0em);
  padding: var(--button-padding, @verticalPadding @horizontalPadding (@verticalPadding + @shadowOffset));

  text-transform: @textTransform;
  text-shadow: var(--button-text-shadow, @textShadow);
  font-weight: var(--button-font-weight, @fontWeight);
  line-height: var(--button-line-height, @lineHeight);
  font-style: normal;
  text-align: center;
  text-decoration: none;

  border-radius: var(--default-border-radius, @borderRadius);
  box-shadow: var(--button-box-shadow, @boxShadow);

  user-select: none;
  transition: @transition;
  will-change: @willChange;

  -webkit-tap-highlight-color: @tapColor;
}


/*******************************
            States
*******************************/

/*--------------
      Hover
---------------*/

.ui.button:hover {
  background-color: var(--button-hover-background-color, @hoverBackgroundColor);
  background-image: var(--button-hover-background-image, @hoverBackgroundImage);
  box-shadow: var(--button-hover-box-shadow, @hoverBoxShadow);
  color: var(--button-hover-color, @hoverColor);
}

.ui.button:hover .icon {
  opacity: var(--button-hover-icon-opacity, @iconHoverOpacity);
}

/*--------------
      Focus
---------------*/

.ui.button:focus {
  background-color: var(--button-focus-background-color, @focusBackgroundColor);
  color: var(--button-focus-color, @focusColor);
  background-image: var(--button-focus-background-image, @focusBackgroundImage) !important;
  box-shadow: var(--button-focus-boxshadow, @focusBoxShadow) !important;
  outline-offset: var(--focused-outline-offset);
  outline-color: var(--focused-outline-color);
}

.ui.button:focus .icon {
  opacity: var(--button-icon-focus-opacity, @iconFocusOpacity);
}

/*--------------
      Down
---------------*/

.ui.button:active,
.ui.active.button:active {
  background-color: var(--button-down-background-color, @downBackgroundColor);
  background-image: var(--button-down-background-image, @downBackgroundImage);
  color: var(--button-down-color);
  box-shadow: var(--button-down-box-shadow, @downBoxShadow);
}

/*--------------
     Active
---------------*/

.ui.active.button {
  background-color: var(--button-active-background-color, @activeBackgroundColor);
  background-image: var(--button-active-background-image, @activeBackgroundImage);
  box-shadow: var(--button-active-box-shadow, @activeBoxShadow);
  color: var(--button-active-color, @activeColor);
}

.ui.active.button:hover {
  background-color: var(--button-active-hover-background-color, @activeHoverBackgroundColor);
  background-image: var(--button-active-hover-background-image, @activeHoverBackgroundImage);
  color: var(--button-active-hover-color, @activeHoverColor);
}

.ui.active.button:active {
  background-color: var(--button-active-background-color, @activeBackgroundColor);
  background-image: var(--button-active-background-image, @activeBackgroundImage);
}


/*--------------
    Loading
---------------*/

/* Specificity hack */
.ui.loading.loading.loading.loading.loading.loading.button {
  position: relative;
  cursor: default;
  text-shadow: none !important;
  color: transparent !important;
  opacity: var(--button-loading-opacity, @loadingOpacity);
  pointer-events: var(--button-loading-pointer-events, @loadingPointerEvents);
  transition: var(--button-loading-transition, @loadingTransition);
}

.ui.loading.button:before {
  position: absolute;
  content: '';
  top: 50%;
  left: 50%;

  margin: var(--loader-margin);
  width: var(--loader-size);
  height: var(--loader-size);

  border-radius: var(--circular-radius);
  border: var(--loader-line-width) solid var(--inverted-loader-fill-color);
}

.ui.loading.button:after {
  position: absolute;
  content: '';
  top: 50%;
  left: 50%;

  margin: var(--loader-margin);
  width: var(--loader-size);
  height: var(--loader-size);

  animation: button-spin var(--loader-speed) linear;
  animation-iteration-count: infinite;

  border-radius: var(--circular-radius);

  border-color: var(--inverted-loader-line-color) transparent transparent;
  border-style: solid;
  border-width: var(--loader-line-width);

  box-shadow: 0px 0px 0px 1px transparent;
}

.ui.labeled.icon.loading.button .icon {
  background-color: transparent;
  box-shadow: none;
}

@keyframes button-spin {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

.ui.basic.loading.button:not(.inverted):before {
  border-color: var(--loader-fill-color);
}

.ui.basic.loading.button:not(.inverted):after {
  border-top-color: var(--loader-line-color);
}

/*-------------------
      Disabled
--------------------*/

.ui.buttons .disabled.button,
.ui.disabled.button,
.ui.button:disabled,
.ui.disabled.button:hover,
.ui.disabled.active.button {
  cursor: default;
  opacity: var(--disabled-opacity) !important;
  background-image: none !important;
  box-shadow: none !important;
  pointer-events: none !important;
}

/* Basic Group With Disabled */
.ui.basic.buttons .ui.disabled.button {
  border-color: var(--disabled-border-color);
}

/*******************************
           Variations
*******************************/

/*-------------------
        Sizes
--------------------*/

.ui.mini.buttons .button,
.ui.mini.buttons .or,
.ui.mini.button {
  font-size: var(--mini);
}

.ui.tiny.buttons .button,
.ui.tiny.buttons .or,
.ui.tiny.button {
  font-size: var(--tiny);
}

.ui.small.buttons .button,
.ui.small.buttons .or,
.ui.small.button {
  font-size: var(--small);
}

.ui.buttons .button,
.ui.buttons .or,
.ui.button {
  font-size: var(--medium);
}

.ui.large.buttons .button,
.ui.large.buttons .or,
.ui.large.button {
  font-size: var(--large);
}

.ui.big.buttons .button,
.ui.big.buttons .or,
.ui.big.button {
  font-size: var(--big);
}

.ui.huge.buttons .button,
.ui.huge.buttons .or,
.ui.huge.button {
  font-size: var(--huge);
}

.ui.massive.buttons .button,
.ui.massive.buttons .or,
.ui.massive.button {
  font-size: var(--massive);
}

/*--------------
    Icon Only
---------------*/

.ui.icon.buttons .button,
.ui.icon.button {
  display: flex;
  align-items: center;
  justify-content: center;
  padding: var(--icon-button-padding, @iconVerticalPadding @iconHorizontalPadding);
  margin: 0;
  font-size: var(--icon-button-font-size, @iconFontSize);

  >svg {
    margin: 0;
  }
}

.ui.icon.buttons .button>.icon,
.ui.icon.button>.icon {
  opacity: var(--button-icon-only-opacity, @iconButtonOpacity);
  margin: 0em !important;
  vertical-align: top;
}

.ui.button:not(.icon)>svg {
  margin: 0 var(--button-icon-distance, @iconDistance) 0 0;
  opacity: 0.8;
  vertical-align: bottom;
}


/*-------------------
        Basic
--------------------*/

.ui.basic.buttons .button,
.ui.basic.button {
  background: var(--basic-button-background, @basicBackground) !important;
  color: var(--basic-button-text-color, @basicTextColor) !important;
  font-weight: var(--basic-button-font-weight, @basicFontWeight);
  border-radius: var(--basic-button-border-radius, @basicBorderRadius);
  text-transform: @basicTextTransform;
  text-shadow: none !important;
  box-shadow: var(--basic-button-box-shadow, @basicBoxShadow);
}

.ui.basic.buttons {
  box-shadow: @basicGroupBoxShadow;
  border: @basicGroupBorder;
  border-radius: var(--default-border-radius);
}

.ui.basic.buttons .button {
  border-radius: 0em;
}

.ui.basic.buttons .button:hover,
.ui.basic.button:hover {
  background: var(--basic-button-hover-background, @basicHoverBackground) !important;
  color: var(--basic-button-hover-text-color, @basicHoverTextColor) !important;
  box-shadow: var(--basic-button-hover-box-shadow, @basicHoverBoxShadow);
}

.ui.basic.buttons .button:focus,
.ui.basic.button:focus {
  background: var(--basic-button-focus-background, @basicFocusBackground) !important;
  color: var(--basic-button-focus-text-color, @basicFocusTextColor) !important;
  box-shadow: var(--basic-button-focus-box-shadow, @basicFocusBoxShadow);
}

.ui.basic.buttons .button:active,
.ui.basic.button:active {
  background: var(--basic-button-down-background, @basicDownBackground) !important;
  color: var(--basic-button-down-text-color, @basicDownTextColor) !important;
  box-shadow: var(--basic-button-down-box-shadow, @basicDownBoxShadow);
}

.ui.basic.buttons .active.button,
.ui.basic.active.button {
  background: var(--basic-button-active-background, @basicActiveBackground) !important;
  box-shadow: var(--basic-button-active-box-shadow, @basicActiveBoxShadow) !important;
  color: var(--basic-button-active-text-color, @basicActiveTextColor) !important;
}

.ui.basic.buttons .active.button:hover,
.ui.basic.active.button:hover {
  background-color: var(--transparent-black, @transparentBlack);
}


/*--------------
    Circular
---------------*/

.ui.circular.button {
  border-radius: 10em;
}

.ui.circular.button>.icon {
  width: 1em;
  vertical-align: baseline;
}


/*-------------------
        Fluid
--------------------*/

.ui.fluid.buttons,
.ui.fluid.button {
  width: 100%;
}

.ui.fluid.button {
  display: block;
}

.ui.two.buttons {
  width: 100%;
}

.ui.two.buttons>.button {
  width: 50%;
}

.ui.three.buttons {
  width: 100%;
}

.ui.three.buttons>.button {
  width: 33.333%;
}

.ui.four.buttons {
  width: 100%;
}

.ui.four.buttons>.button {
  width: 25%;
}

.ui.five.buttons {
  width: 100%;
}

.ui.five.buttons>.button {
  width: 20%;
}

.ui.six.buttons {
  width: 100%;
}

.ui.six.buttons>.button {
  width: 16.666%;
}

.ui.seven.buttons {
  width: 100%;
}

.ui.seven.buttons>.button {
  width: 14.285%;
}

.ui.eight.buttons {
  width: 100%;
}

.ui.eight.buttons>.button {
  width: 12.500%;
}

.ui.nine.buttons {
  width: 100%;
}

.ui.nine.buttons>.button {
  width: 11.11%;
}

.ui.ten.buttons {
  width: 100%;
}

.ui.ten.buttons>.button {
  width: 10%;
}

.ui.eleven.buttons {
  width: 100%;
}

.ui.eleven.buttons>.button {
  width: 9.09%;
}

.ui.twelve.buttons {
  width: 100%;
}

.ui.twelve.buttons>.button {
  width: 8.3333%;
}

/* Fluid Vertical Buttons */
.ui.fluid.vertical.buttons,
.ui.fluid.vertical.buttons>.button {
  display: flex;
  width: auto;
}

.ui.two.vertical.buttons>.button {
  height: 50%;
}

.ui.three.vertical.buttons>.button {
  height: 33.333%;
}

.ui.four.vertical.buttons>.button {
  height: 25%;
}

.ui.five.vertical.buttons>.button {
  height: 20%;
}

.ui.six.vertical.buttons>.button {
  height: 16.666%;
}

.ui.seven.vertical.buttons>.button {
  height: 14.285%;
}

.ui.eight.vertical.buttons>.button {
  height: 12.500%;
}

.ui.nine.vertical.buttons>.button {
  height: 11.11%;
}

.ui.ten.vertical.buttons>.button {
  height: 10%;
}

.ui.eleven.vertical.buttons>.button {
  height: 9.09%;
}

.ui.twelve.vertical.buttons>.button {
  height: 8.3333%;
}

/*-------------------
       Primary
--------------------*/

/*--- Standard ---*/
.ui.primary.buttons .button,
.ui.primary.button {
  background-color: var(--primary-button-background-color, @primaryColor);
  color: var(--primary-button-text-color, @primaryTextColor);
  text-shadow: var(--primary-button-text-shadow, @primaryTextShadow);
  background-image: var(--primary-button-background-image, @coloredBackgroundImage);
}

.ui.primary.button {
  box-shadow: var(--primary-button-box-shadow, @coloredBoxShadow);
}

.ui.primary.buttons .button:hover,
.ui.primary.button:hover {
  background-color: var(--primary-button-hover-background-color, @primaryColorHover);
  color: var(--primary-button-text-color, @primaryTextColor);
  text-shadow: var(--primary-button-text-shadow, @primaryTextShadow);
}

.ui.primary.buttons .button:focus,
.ui.primary.button:focus {
  background-color: var(--primary-button-focus-background-color, @primaryColorFocus);
  color: var(--primary-button-text-color, @primaryTextColor);
  text-shadow: var(--primary-button-text-shadow, @primaryTextShadow);
}

.ui.primary.buttons .button:active,
.ui.primary.button:active {
  background-color: var(--primary-button-down-background-color, @primaryColorDown);
  color: var(--primary-button-text-color, @primaryTextColor);
  text-shadow: var(--primary-button-text-shadow, @primaryTextShadow);
}

.ui.primary.buttons .active.button,
.ui.primary.buttons .active.button:active,
.ui.primary.active.button,
.ui.primary.button .active.button:active {
  background-color: var(--primary-button-active-background-color, @primaryColorActive);
  color: var(--primary-button-text-color, @primaryTextColor);
  text-shadow: var(--primary-button-text-shadow, @primaryTextShadow);
}

/* Basic */
.ui.basic.primary.buttons .button,
.ui.basic.primary.button {
  box-shadow: var(--basic-primary-button-box-shadow, 0px 0px 0px @basicBorderSize @primaryColor inset) !important;
  color: var(--primary-color, @primaryColor) !important;
}

.ui.basic.primary.buttons .button:hover,
.ui.basic.primary.button:hover {
  background: transparent !important;
  box-shadow: var(--basic-primary-button-hover-box-shadow, 0px 0px 0px @basicColoredBorderSize @primaryColorHover inset) !important;
  color: var(--primary-color-hover, @primaryColorHover) !important;
}

.ui.basic.primary.buttons .button:focus,
.ui.basic.primary.button:focus {
  background: transparent !important;
  box-shadow: var(--basic-primary-button-focus-box-shadow, 0px 0px 0px @basicColoredBorderSize @primaryColorFocus inset) !important;
  color: var(--primary-color-hover, @primaryColorHover) !important;
}

.ui.basic.primary.buttons .active.button,
.ui.basic.primary.active.button {
  background: transparent !important;
  box-shadow: var(--basic-primary-button-active-box-shadow, 0px 0px 0px @basicColoredBorderSize @primaryColorActive inset) !important;
  color: var(--primary-color-down, @primaryColorDown) !important;
}

.ui.basic.primary.buttons .button:active,
.ui.basic.primary.button:active {
  box-shadow: var(--basic-primary-button-down-box-shadow, 0px 0px 0px @basicColoredBorderSize @primaryColorDown inset) !important;
  color: var(--primary-color-down, @primaryColorDown) !important;
}

.ui.buttons:not(.vertical)>.basic.primary.button:not(:first-child) {
  margin-left: calc(-1 * var(--basic-colored-border-size, @basicColoredBorderSize));
}

/*-------------------
      Secondary
--------------------*/

/* Standard */
.ui.secondary.buttons .button,
.ui.secondary.button {
  background-color: var(--secondary-button-background-color, @secondaryColor);
  color: var(--secondary-button-text-color, @secondaryTextColor);
  text-shadow: var(--secondary-button-text-shadow, @secondaryTextShadow);
  background-image: var(--secondary-button-background-image, @coloredBackgroundImage);
}

.ui.secondary.button {
  box-shadow: var(--secondary-button-box-shadow, @coloredBoxShadow);
}

.ui.secondary.buttons .button:hover,
.ui.secondary.button:hover {
  background-color: var(--secondary-button-hover-background-color, @secondaryColorHover);
  color: var(--secondary-button-text-color, @secondaryTextColor);
  text-shadow: var(--secondary-button-text-shadow, @secondaryTextShadow);
}

.ui.secondary.buttons .button:focus,
.ui.secondary.button:focus {
  background-color: var(--secondary-button-focus-background-color, @secondaryColorFocus);
  color: var(--secondary-button-text-color, @secondaryTextColor);
  text-shadow: var(--secondary-button-text-shadow, @secondaryTextShadow);
}

.ui.secondary.buttons .button:active,
.ui.secondary.button:active {
  background-color: var(--secondary-button-down-background-color, @secondaryColorDown);
  color: var(--secondary-button-text-color, @secondaryTextColor);
  text-shadow: var(--secondary-button-text-shadow, @secondaryTextShadow);
}

.ui.secondary.buttons .active.button,
.ui.secondary.buttons .active.button:active,
.ui.secondary.active.button,
.ui.secondary.button .active.button:active {
  background-color: var(--secondary-button-active-background-color, @secondaryColorActive);
  color: var(--secondary-button-text-color, @secondaryTextColor);
  text-shadow: var(--secondary-button-text-shadow, @secondaryTextShadow);
}

/* Basic */
.ui.basic.secondary.buttons .button,
.ui.basic.secondary.button {
  box-shadow: var(--basic-secondary-button-box-shadow, 0px 0px 0px @basicBorderSize @secondaryColor inset) !important;
  color: var(--secondary-color, @secondaryColor) !important;
}

.ui.basic.secondary.buttons .button:hover,
.ui.basic.secondary.button:hover {
  background: transparent !important;
  box-shadow: var(--basic-secondary-button-hover-box-shadow, 0px 0px 0px @basicColoredBorderSize @secondaryColorHover inset) !important;
  color: var(--secondary-color-hover, @secondaryColorHover) !important;
}

.ui.basic.secondary.buttons .button:focus,
.ui.basic.secondary.button:focus {
  background: transparent !important;
  box-shadow: var(--basic-secondary-button-focus-box-shadow, 0px 0px 0px @basicColoredBorderSize @secondaryColorFocus inset) !important;
  color: var(--secondary-color-hover, @secondaryColorHover) !important;
}

.ui.basic.secondary.buttons .active.button,
.ui.basic.secondary.active.button {
  background: transparent !important;
  box-shadow: var(--basic-secondary-button-active-box-shadow, 0px 0px 0px @basicColoredBorderSize @secondaryColorActive inset) !important;
  color: var(--secondary-color-down, @secondaryColorDown) !important;
}

.ui.basic.secondary.buttons .button:active,
.ui.basic.secondary.button:active {
  box-shadow: var(--basic-secondary-button-down-box-shadow, 0px 0px 0px @basicColoredBorderSize @secondaryColorDown inset) !important;
  color: var(--secondary-color-down, @secondaryColorDown) !important;
}

.ui.buttons:not(.vertical)>.basic.secondary.button:not(:first-child) {
  margin-left: calc(-1 * var(--basic-colored-border-size, @basicColoredBorderSize));
}

/*---------------
    Positive
----------------*/

/* Standard */
.ui.positive.buttons .button,
.ui.positive.button {
  background-color: var(--positive-button-background-color, @positiveColor);
  color: var(--positive-button-text-color, @positiveTextColor);
  text-shadow: var(--positive-button-text-shadow, @positiveTextShadow);
  background-image: var(--positive-button-background-image, @coloredBackgroundImage);
}

.ui.positive.button {
  box-shadow: var(--positive-button-box-shadow, @coloredBoxShadow);
}

.ui.positive.buttons .button:hover,
.ui.positive.button:hover {
  background-color: var(--positive-button-hover-background-color, @positiveColorHover);
  color: var(--positive-button-text-color, @positiveTextColor);
  text-shadow: var(--positive-button-text-shadow, @positiveTextShadow);
}

.ui.positive.buttons .button:focus,
.ui.positive.button:focus {
  background-color: var(--positive-button-focus-background-color, @positiveColorFocus);
  color: var(--positive-button-text-color, @positiveTextColor);
  text-shadow: var(--positive-button-text-shadow, @positiveTextShadow);
}

.ui.positive.buttons .button:active,
.ui.positive.button:active {
  background-color: var(--positive-button-down-background-color, @positiveColorDown);
  color: var(--positive-button-text-color, @positiveTextColor);
  text-shadow: var(--positive-button-text-shadow, @positiveTextShadow);
}

.ui.positive.buttons .active.button,
.ui.positive.buttons .active.button:active,
.ui.positive.active.button,
.ui.positive.button .active.button:active {
  background-color: var(--positive-button-active-background-color, @positiveColorActive);
  color: var(--positive-button-text-color, @positiveTextColor);
  text-shadow: var(--positive-button-text-shadow, @positiveTextShadow);
}

/* Basic */
.ui.basic.positive.buttons .button,
.ui.basic.positive.button {
  box-shadow: var(--basic-positive-button-box-shadow, 0px 0px 0px @basicBorderSize @positiveColor inset) !important;
  color: var(--positive-color, @positiveColor) !important;
}

.ui.basic.positive.buttons .button:hover,
.ui.basic.positive.button:hover {
  background: transparent !important;
  box-shadow: var(--basic-positive-button-hover-box-shadow, 0px 0px 0px @basicColoredBorderSize @positiveColorHover inset) !important;
  color: var(--positive-color-hover, @positiveColorHover) !important;
}

.ui.basic.positive.buttons .button:focus,
.ui.basic.positive.button:focus {
  background: transparent !important;
  box-shadow: var(--basic-positive-button-focus-box-shadow, 0px 0px 0px @basicColoredBorderSize @positiveColorFocus inset) !important;
  color: var(--positive-color-hover, @positiveColorHover) !important;
}

.ui.basic.positive.buttons .active.button,
.ui.basic.positive.active.button {
  background: transparent !important;
  box-shadow: var(--basic-positive-button-active-box-shadow, 0px 0px 0px @basicColoredBorderSize @positiveColorActive inset) !important;
  color: var(--positive-color-down, @positiveColorDown) !important;
}

.ui.basic.positive.buttons .button:active,
.ui.basic.positive.button:active {
  box-shadow: var(--basic-positive-button-down-box-shadow, 0px 0px 0px @basicColoredBorderSize @positiveColorDown inset) !important;
  color: var(--positive-color-down, @positiveColorDown) !important;
}

.ui.buttons:not(.vertical)>.basic.positive.button:not(:first-child) {
  margin-left: calc(-1 * var(--basic-colored-border-size, @basicColoredBorderSize));
}

/*---------------
     Negative
----------------*/

/* Standard */
.ui.negative.buttons .button,
.ui.negative.button {
  background-color: var(--negative-button-background-color, @negativeColor);
  color: var(--negative-button-text-color, @negativeTextColor);
  text-shadow: var(--negative-button-text-shadow, @negativeTextShadow);
  background-image: var(--negative-button-background-image, @coloredBackgroundImage);
}

.ui.negative.button {
  box-shadow: var(--negative-button-box-shadow, @coloredBoxShadow);
}

.ui.negative.buttons .button:hover,
.ui.negative.button:hover {
  background-color: var(--negative-button-hover-background-color, @negativeColorHover);
  color: var(--negative-button-text-color, @negativeTextColor);
  text-shadow: var(--negative-button-text-shadow, @negativeTextShadow);
}

.ui.negative.buttons .button:focus,
.ui.negative.button:focus {
  background-color: var(--negative-button-focus-background-color, @negativeColorFocus);
  color: var(--negative-button-text-color, @negativeTextColor);
  text-shadow: var(--negative-button-text-shadow, @negativeTextShadow);
}

.ui.negative.buttons .button:active,
.ui.negative.button:active {
  background-color: var(--negative-button-down-background-color, @negativeColorDown);
  color: var(--negative-button-text-color, @negativeTextColor);
  text-shadow: var(--negative-button-text-shadow, @negativeTextShadow);
}

.ui.negative.buttons .active.button,
.ui.negative.buttons .active.button:active,
.ui.negative.active.button,
.ui.negative.button .active.button:active {
  background-color: var(--negative-button-active-background-color, @negativeColorActive);
  color: var(--negative-button-text-color, @negativeTextColor);
  text-shadow: var(--negative-button-text-shadow, @negativeTextShadow);
}

/* Basic */
.ui.basic.negative.buttons .button,
.ui.basic.negative.button {
  box-shadow: var(--basic-negative-button-box-shadow, 0px 0px 0px @basicBorderSize @negativeColor inset) !important;
  color: var(--negative-color, @negativeColor) !important;
}

.ui.basic.negative.buttons .button:hover,
.ui.basic.negative.button:hover {
  background: transparent !important;
  box-shadow: var(--basic-negative-button-hover-box-shadow, 0px 0px 0px @basicColoredBorderSize @negativeColorHover inset) !important;
  color: var(--negative-color-hover, @negativeColorHover) !important;
}

.ui.basic.negative.buttons .button:focus,
.ui.basic.negative.button:focus {
  background: transparent !important;
  box-shadow: var(--basic-negative-button-focus-box-shadow, 0px 0px 0px @basicColoredBorderSize @negativeColorFocus inset) !important;
  color: var(--negative-color-hover, @negativeColorHover) !important;
}

.ui.basic.negative.buttons .active.button,
.ui.basic.negative.active.button {
  background: transparent !important;
  box-shadow: var(--basic-negative-button-active-box-shadow, 0px 0px 0px @basicColoredBorderSize @negativeColorActive inset) !important;
  color: var(--negative-color-down, @negativeColorDown) !important;
}

.ui.basic.negative.buttons .button:active,
.ui.basic.negative.button:active {
  box-shadow: var(--basic-negative-button-down-box-shadow, 0px 0px 0px @basicColoredBorderSize @negativeColorDown inset) !important;
  color: var(--negative-color-down, @negativeColorDown) !important;
}

.ui.buttons:not(.vertical)>.basic.negative.button:not(:first-child) {
  margin-left: calc(-1 * var(--basic-colored-border-size, @basicColoredBorderSize));
}


.loadUIOverrides();
